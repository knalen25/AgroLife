# Generated by Django 5.2.2 on 2025-06-06 05:16

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('lote', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Fornecedor',
            fields=[
                ('idfornecedor', models.AutoField(help_text='Identificador único do fornecedor.', primary_key=True, serialize=False)),
                ('nome_fornecedor', models.CharField(help_text='Nome do fornecedor.', max_length=80)),
            ],
            options={
                'db_table': 'Fornecedor',
            },
        ),
        migrations.CreateModel(
            name='Raca',
            fields=[
                ('idraca', models.AutoField(help_text='Identificador único da raça.', primary_key=True, serialize=False)),
                ('nome_raca', models.CharField(help_text="Nome da raça do boi (por exemplo: 'Nelore', 'Angus').", max_length=30)),
            ],
            options={
                'db_table': 'Raca',
            },
        ),
        migrations.CreateModel(
            name='Sexo',
            fields=[
                ('idsexo', models.AutoField(help_text='Identificador único do sexo.', primary_key=True, serialize=False)),
                ('tipo_sexo', models.CharField(help_text="Descrição do sexo (por exemplo: 'Macho', 'Fêmea').", max_length=10)),
            ],
            options={
                'db_table': 'Sexo',
            },
        ),
        migrations.CreateModel(
            name='StatusBoi',
            fields=[
                ('idstatus_boi', models.AutoField(primary_key=True, serialize=False)),
                ('nome_status', models.CharField(choices=[('Ativo', 'Ativo'), ('Morto', 'Morto'), ('Vendido', 'Vendido')], help_text='Escolha o status do boi.', max_length=10)),
            ],
            options={
                'db_table': 'status_boi',
            },
        ),
        migrations.CreateModel(
            name='Boi',
            fields=[
                ('idboi', models.AutoField(help_text='Identificador único do boi.', primary_key=True, serialize=False)),
                ('brinco', models.CharField(help_text='Número do brinco do boi (identificação individual).', max_length=15)),
                ('chip', models.CharField(blank=True, help_text='Código do chip do boi (opcional).', max_length=15, null=True)),
                ('peso_entrada', models.DecimalField(blank=True, decimal_places=2, help_text='Peso do boi no momento de entrada (em kg).', max_digits=6, null=True)),
                ('peso_saida', models.DecimalField(blank=True, decimal_places=2, help_text='Peso do boi no momento de saída (em kg).', max_digits=6, null=True)),
                ('data_nascimento', models.DateField(blank=True, help_text='Data de nascimento do boi.', null=True)),
                ('data_entrada', models.DateField(help_text='data de entrada do boi')),
                ('data_saida', models.DateField(blank=True, help_text='Data de saída do boi (venda ou transferência).', null=True)),
                ('data_morte', models.DateField(blank=True, help_text='Data de morte do boi (se aplicável).', null=True)),
                ('motivo_morte', models.CharField(blank=True, help_text='Descrição do motivo da morte do boi (se falecido).', max_length=200, null=True)),
                ('necropsia', models.BooleanField(blank=True, default=False, help_text='Indica se foi realizada necropsia (True), não foi (False) ou desconhecido (NULL).', null=True)),
                ('lote', models.ForeignKey(blank=True, help_text='Lote atual ao qual o boi pertence.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bois_por_lote', to='lote.lote')),
                ('fornecedor', models.ForeignKey(blank=True, help_text='Fornecedor de origem do boi.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bois_por_fornecedor', to='boi.fornecedor')),
                ('raca', models.ForeignKey(help_text='Raça do boi.', on_delete=django.db.models.deletion.PROTECT, related_name='bois_por_raca', to='boi.raca')),
                ('sexo', models.ForeignKey(help_text='Sexo do boi.', on_delete=django.db.models.deletion.PROTECT, related_name='bois_por_sexo', to='boi.sexo')),
                ('status_boi', models.ForeignKey(help_text='Status atual do boi.', on_delete=django.db.models.deletion.PROTECT, related_name='bois_por_status', to='boi.statusboi')),
            ],
            options={
                'db_table': 'Boi',
            },
        ),
        migrations.CreateModel(
            name='PesoMovimentacao',
            fields=[
                ('id_peso_movimentacao', models.AutoField(help_text='Identificador único do registro de pesagem.', primary_key=True, serialize=False)),
                ('peso_movimentacao', models.DecimalField(decimal_places=2, help_text='Valor do peso medido na data de movimentação (em kg).', max_digits=6)),
                ('data_movimentacao', models.DateField(help_text='Data em que a pesagem foi realizada.')),
                ('boi', models.ForeignKey(help_text='Boi cuja pesagem está sendo registrada.', on_delete=django.db.models.deletion.PROTECT, related_name='pesagens', to='boi.boi')),
            ],
            options={
                'db_table': 'peso_movimentacao',
            },
        ),
        migrations.CreateModel(
            name='PesoProjetado',
            fields=[
                ('id_peso_projetado', models.AutoField(help_text='Identificador único do registro de projeção de peso.', primary_key=True, serialize=False)),
                ('peso_projetado', models.DecimalField(decimal_places=2, help_text='Valor do peso projetado para a data específica (em kg).', max_digits=6)),
                ('data_projetado', models.DateField(help_text='Data para a qual a projeção de peso foi calculada.')),
                ('boi', models.ForeignKey(help_text='Boi ao qual esta projeção de peso se refere.', on_delete=django.db.models.deletion.PROTECT, related_name='projecoes_peso', to='boi.boi')),
            ],
            options={
                'db_table': 'peso_projetado',
            },
        ),
    ]
